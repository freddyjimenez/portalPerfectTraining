<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans" 
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.0.xsd">

    <http auto-config="true" use-expressions="true">

                <intercept-url pattern="/index.xhtml" access="hasRole('ROLE_INDEX')" />
        <intercept-url pattern="/modulos/cliente/clientes.xhtml" access="hasRole('ROLE_CLIENTE_PAGE')" />
        <intercept-url pattern="/modulos/cliente/nuevoCliente.xhtml" access="hasRole('ROLE_CLIENTE_REGISTRO')" />

      <form-login login-page="/" authentication-failure-url="/" default-target-url="/sys/"/>
    </http>
    
    <!-- ================ OLD WAY ================================================== 
        <authentication-manager>
            <authentication-provider>
                <jdbc-user-service data-source-ref="mysqlDataSource" />
            </authentication-provider>
        </authentication-manager>
    -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider>
<!--            <password-encoder hash="md5"/>-->
		<jdbc-user-service data-source-ref="dataSource"
		   users-by-username-query="SELECT rut, clave, estado FROM usuario where rut=?" 
		   authorities-by-username-query='SELECT usuario.rut, relacion_permiso_perfil.permiso FROM usuario, relacion_permiso_perfil WHERE usuario.perfil = relacion_permiso_perfil.perfil and usuario.rut=?'/>
	   </authentication-provider>
           
           
    </authentication-manager>
    <!-- 
    <beans:bean id="myUserDetailsService"
                class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">  
              
        <beans:property name="dataSource" ref="dataSource"/>
             <property name="enableGroups" value="true" />
        <beans:property name="usersByUsernameQuery" value="select nombre clave estado from usuario where nombre=?"/>
        <beans:property name="authoritiesByUsernameQuery" value="select usuario, nombre from rol where usuario =? "/>
    </beans:bean>-->
     
    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="org.postgresql.Driver"></beans:property>
        <beans:property name="url" value="jdbc:postgresql://localhost/perfectdb"></beans:property>
        <beans:property name="username" value="postgres"></beans:property>
        <beans:property name="password" value="itlmnhnoc"></beans:property>
           
    </beans:bean>                
    <!--  <authentication-manager>
            <authentication-provider>
                    <user-service>
                            <user name="master" password="123" authorities="ROLE_ADMIN" />
                            <user name="djeter" password="17684514" authoriti.es="ROLE_ADMIN" />
                    </user-service>
            </authentication-provider>
    </authentication-manager>-->

</beans:beans>